MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
  RESNETS:
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
  FPN:
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: [[32], [64], [128], [256], [512]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]  # Three aspect ratios (same for all in feature maps)
  RPN:
    IN_FEATURES: ["p2", "p3", "p4", "p5", "p6"]
    PRE_NMS_TOPK_TRAIN: 2000  # Per FPN level
    PRE_NMS_TOPK_TEST: 1000  # Per FPN level
    # Detectron1 uses 2000 proposals per-batch,
    # (See "modeling/rpn/rpn_outputs.py" for details of this legacy issue)
    # which is approximately 1000 proposals per-image since the default batch size for FPN is 2.
    POST_NMS_TOPK_TRAIN: 1000
    POST_NMS_TOPK_TEST: 1000
  ROI_HEADS:
    NAME: "StandardROIHeads"
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
    NUM_CLASSES: 20
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_FC: 2
    POOLER_RESOLUTION: 7
  ROI_MASK_HEAD:
    NAME: "MaskRCNNConvUpsampleHead"
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
DATASETS:
  TRAIN: ("voc_2007_train",)
  TEST: ("voc_2007_test",)
# SOLVER:
#   IMS_PER_BATCH: 16
#   BASE_LR: 0.02
#   STEPS: (60000, 80000)
#   MAX_ITER: 90000
# INPUT:
#   MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
# VERSION: 2
# SOLVER:
#   IMS_PER_BATCH: 16  # You can adjust this based on your GPU memory
#   BASE_LR: 0.0025
#   STEPS: (120000, 160000)
#   MAX_ITER: 180000
SOLVER:
  IMS_PER_BATCH: 16  # 批量大小，根据 GPU 显存调整
  BASE_LR: 0.0025  # 初始学习率
  STEPS: (60000, 80000)  # 学习率衰减步骤
  MAX_ITER: 90000  # 最大迭代次数
  WARMUP_ITERS: 1000  # 预热迭代次数，防止初始学习率过大
  WARMUP_FACTOR: 0.001  # 预热因子
  GAMMA: 0.1  # 学习率衰减因子，每次衰减后的学习率为之前的 0.1 倍
INPUT:
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MAX_SIZE_TEST: 1333
  # FLIP: True  # 启用随机水平翻转
VERSION: 2